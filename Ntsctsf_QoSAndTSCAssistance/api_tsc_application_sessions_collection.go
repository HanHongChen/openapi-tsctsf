/*
 * Ntsctsf_QoSandTSCAssistance Service API
 *
 * TSCTSF QoS and TSC Assistance Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * Source file: 3GPP TS 29.565 V18.3.0; 5G System; Time Sensitive Communication and Time Synchronization function  Services; Stage 3. 
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.565/
 *
 * API version: 1.1.0-alpha.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package QoSandTSCAssistance

import (
    "bitbucket.org/free5GC/openapi"
    "bitbucket.org/free5GC/openapi/models"

	"context"
	"io"
	"net/url"
	"strings"
)

// Linger please
var (
	_ context.Context
)

type TSCApplicationSessionsCollectionApiService service

/*
TSCApplicationSessionsCollectionApiService Creates a new Individual TSC Application Session Context resource
 * @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @param TscAppSessionContextData - Contains the information for the creation the resource.

@return PostTSCAppSessionsResponse
*/

// PostTSCAppSessionsRequest
type PostTSCAppSessionsRequest struct {
    TscAppSessionContextData *models.TscAppSessionContextData
}

func (r *PostTSCAppSessionsRequest) SetTscAppSessionContextData(TscAppSessionContextData models.TscAppSessionContextData) {
    r.TscAppSessionContextData = &TscAppSessionContextData
}

type PostTSCAppSessionsResponse struct {
    Location string
    TscAppSessionContextData *models.TscAppSessionContextData
}

type PostTSCAppSessionsError struct {
    RetryAfter string
    ProblemDetails *models.ProblemDetails
ProblemDetailsTsctsfQosTscac *models.ProblemDetailsTsctsfQosTscac
}

func (a *TSCApplicationSessionsCollectionApiService) PostTSCAppSessions(ctx context.Context, request *PostTSCAppSessionsRequest) (*PostTSCAppSessionsResponse, error) {
	var (
		localVarHTTPMethod   = strings.ToUpper("Post")
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  PostTSCAppSessionsResponse
	)

	// create path and map variables
	localVarPath := a.client.cfg.BasePath() + "/tsc-app-sessions"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	
    localVarHTTPContentTypes := []string{ "application/json" }
    
    localVarHeaderParams["Content-Type"] = localVarHTTPContentTypes[0] // use the first content type specified in 'consumes'

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{ "application/json", "application/problem+json" }

	// set Accept header
	localVarHTTPHeaderAccept := strings.Join(localVarHTTPHeaderAccepts, ", ")
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}



	// body params
	localVarPostBody = request.TscAppSessionContextData


	r, err := openapi.PrepareRequest(ctx, a.client.cfg, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return nil, err
	}

	localVarHTTPResponse, err := openapi.CallAPI(a.client.cfg, r)
	if err != nil || localVarHTTPResponse == nil {
		return nil, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
    if err != nil {
		return nil, err
	}
	err = localVarHTTPResponse.Body.Close()
	if err != nil {
		return nil, err
	}

    apiError := openapi.GenericOpenAPIError{
        RawBody:     localVarBody,
        ErrorStatus: localVarHTTPResponse.StatusCode,
    }

    switch localVarHTTPResponse.StatusCode {
        case 201:
            err = openapi.Deserialize(&localVarReturnValue.TscAppSessionContextData, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            localVarReturnValue.Location = localVarHTTPResponse.Header.Get("Location")
            return &localVarReturnValue, nil
        case 400:
            var v PostTSCAppSessionsError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 401:
            var v PostTSCAppSessionsError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 403:
            var v PostTSCAppSessionsError
            err = openapi.Deserialize(&v.ProblemDetailsTsctsfQosTscac, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            v.RetryAfter = localVarHTTPResponse.Header.Get("Retry-After")
            apiError.ErrorModel = v
            return nil, apiError
        case 404:
            var v PostTSCAppSessionsError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 411:
            var v PostTSCAppSessionsError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 413:
            var v PostTSCAppSessionsError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 415:
            var v PostTSCAppSessionsError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 429:
            var v PostTSCAppSessionsError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 500:
            var v PostTSCAppSessionsError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 502:
            var v PostTSCAppSessionsError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 503:
            var v PostTSCAppSessionsError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        default:
            return nil, apiError
    }
}


// PostTSCAppSessionsTerminationRequestPostRequest
type PostTSCAppSessionsTerminationRequestPostRequest struct {
    TerminationInfo *models.TerminationInfo
}

func (r *PostTSCAppSessionsTerminationRequestPostRequest) SetTerminationInfo(TerminationInfo models.TerminationInfo) {
r.TerminationInfo = &TerminationInfo
}

type PostTSCAppSessionsTerminationRequestPostResponse struct {
        }

type PostTSCAppSessionsTerminationRequestPostError struct {
    Location string
Var3gppSbiTargetNfId string
    ProblemDetails *models.ProblemDetails
RedirectResponse *models.RedirectResponse
}

func (a *TSCApplicationSessionsCollectionApiService) PostTSCAppSessionsTerminationRequestPost(ctx context.Context, uri string, request *PostTSCAppSessionsTerminationRequestPostRequest) (*PostTSCAppSessionsTerminationRequestPostResponse, error) {
    var (
    localVarHTTPMethod   = strings.ToUpper("Post")
    localVarPostBody     interface{}
    localVarFormFileName string
    localVarFileName     string
    localVarFileBytes    []byte
    localVarReturnValue  PostTSCAppSessionsTerminationRequestPostResponse
    )

    // create path and map variables
    localVarPath := uri

    localVarHeaderParams := make(map[string]string)
    localVarQueryParams := url.Values{}
    localVarFormParams := url.Values{}
    
    localVarHTTPContentTypes := []string{ "application/json" }

    localVarHeaderParams["Content-Type"] = localVarHTTPContentTypes[0] // use the first content type specified in 'consumes'

    // to determine the Accept header
    localVarHTTPHeaderAccepts := []string{ "application/json", "application/problem+json" }

    // set Accept header
    localVarHTTPHeaderAccept := strings.Join(localVarHTTPHeaderAccepts, ", ")
    if localVarHTTPHeaderAccept != "" {
    localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
}



    // body params
        localVarPostBody = request.TerminationInfo
    

    r, err := openapi.PrepareRequest(ctx, a.client.cfg, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
    if err != nil {
        return nil, err
    }

    localVarHTTPResponse, err := openapi.CallAPI(a.client.cfg, r)
    if err != nil || localVarHTTPResponse == nil {
        return nil, err
    }

    localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
    if err != nil {
		return nil, err
	}
    err = localVarHTTPResponse.Body.Close()
    if err != nil {
        return nil, err
    }

    apiError := openapi.GenericOpenAPIError{
        RawBody:     localVarBody,
        ErrorStatus: localVarHTTPResponse.StatusCode,
    }

    switch localVarHTTPResponse.StatusCode {
        case 204:
            return &localVarReturnValue, nil
        case 307:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
                v.Location = localVarHTTPResponse.Header.Get("Location")
                v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 308:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
                v.Location = localVarHTTPResponse.Header.Get("Location")
                v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 400:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 401:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 403:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 404:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 411:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 413:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 415:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 429:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 500:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 502:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 503:
            var v PostTSCAppSessionsTerminationRequestPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        default:
            var v PostTSCAppSessionsTerminationRequestPostError
            apiError.ErrorModel = v
            return nil, apiError
    }
}

// PostTSCAppSessionsEventNotificationPostRequest
type PostTSCAppSessionsEventNotificationPostRequest struct {
    EventsNotification *models.EventsNotification
}

func (r *PostTSCAppSessionsEventNotificationPostRequest) SetEventsNotification(EventsNotification models.EventsNotification) {
r.EventsNotification = &EventsNotification
}

type PostTSCAppSessionsEventNotificationPostResponse struct {
        }

type PostTSCAppSessionsEventNotificationPostError struct {
    Location string
Var3gppSbiTargetNfId string
    ProblemDetails *models.ProblemDetails
RedirectResponse *models.RedirectResponse
}

func (a *TSCApplicationSessionsCollectionApiService) PostTSCAppSessionsEventNotificationPost(ctx context.Context, uri string, request *PostTSCAppSessionsEventNotificationPostRequest) (*PostTSCAppSessionsEventNotificationPostResponse, error) {
    var (
    localVarHTTPMethod   = strings.ToUpper("Post")
    localVarPostBody     interface{}
    localVarFormFileName string
    localVarFileName     string
    localVarFileBytes    []byte
    localVarReturnValue  PostTSCAppSessionsEventNotificationPostResponse
    )

    // create path and map variables
    localVarPath := uri

    localVarHeaderParams := make(map[string]string)
    localVarQueryParams := url.Values{}
    localVarFormParams := url.Values{}
    
    localVarHTTPContentTypes := []string{ "application/json" }

    localVarHeaderParams["Content-Type"] = localVarHTTPContentTypes[0] // use the first content type specified in 'consumes'

    // to determine the Accept header
    localVarHTTPHeaderAccepts := []string{ "application/json", "application/problem+json" }

    // set Accept header
    localVarHTTPHeaderAccept := strings.Join(localVarHTTPHeaderAccepts, ", ")
    if localVarHTTPHeaderAccept != "" {
    localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
}



    // body params
        localVarPostBody = request.EventsNotification
    

    r, err := openapi.PrepareRequest(ctx, a.client.cfg, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
    if err != nil {
        return nil, err
    }

    localVarHTTPResponse, err := openapi.CallAPI(a.client.cfg, r)
    if err != nil || localVarHTTPResponse == nil {
        return nil, err
    }

    localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
    if err != nil {
		return nil, err
	}
    err = localVarHTTPResponse.Body.Close()
    if err != nil {
        return nil, err
    }

    apiError := openapi.GenericOpenAPIError{
        RawBody:     localVarBody,
        ErrorStatus: localVarHTTPResponse.StatusCode,
    }

    switch localVarHTTPResponse.StatusCode {
        case 204:
            return &localVarReturnValue, nil
        case 307:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
                v.Location = localVarHTTPResponse.Header.Get("Location")
                v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 308:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
                v.Location = localVarHTTPResponse.Header.Get("Location")
                v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 400:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 401:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 403:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 404:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 411:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 413:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 415:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 429:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 500:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 502:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 503:
            var v PostTSCAppSessionsEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        default:
            var v PostTSCAppSessionsEventNotificationPostError
            apiError.ErrorModel = v
            return nil, apiError
    }
}

