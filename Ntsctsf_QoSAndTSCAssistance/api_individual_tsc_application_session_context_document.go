/*
 * Ntsctsf_QoSandTSCAssistance Service API
 *
 * TSCTSF QoS and TSC Assistance Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * Source file: 3GPP TS 29.565 V18.3.0; 5G System; Time Sensitive Communication and Time Synchronization function  Services; Stage 3. 
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.565/
 *
 * API version: 1.1.0-alpha.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package QoSandTSCAssistance

import (
    "bitbucket.org/free5GC/openapi"
    "bitbucket.org/free5GC/openapi/models"

	"context"
	"io"
	"net/url"
	"strings"
)

// Linger please
var (
	_ context.Context
)

type IndividualTSCApplicationSessionContextDocumentApiService service

/*
IndividualTSCApplicationSessionContextDocumentApiService Deletes an existing Individual TSC Application Session Context
 * @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @param AppSessionId - String identifying the Individual TSC Application Session Context resource.
 * @param EventsSubscReqData - Deletion of the Individual TSC Application Session Context resource, request notification. 

@return DeleteTSCAppSessionResponse
*/

// DeleteTSCAppSessionRequest
type DeleteTSCAppSessionRequest struct {
    AppSessionId *string
    EventsSubscReqData *models.EventsSubscReqData
}

func (r *DeleteTSCAppSessionRequest) SetAppSessionId(AppSessionId string) {
    r.AppSessionId = &AppSessionId
}
func (r *DeleteTSCAppSessionRequest) SetEventsSubscReqData(EventsSubscReqData models.EventsSubscReqData) {
    r.EventsSubscReqData = &EventsSubscReqData
}

type DeleteTSCAppSessionResponse struct {
        EventsNotification *models.EventsNotification
}

type DeleteTSCAppSessionError struct {
    Location string
Var3gppSbiTargetNfId string
    ProblemDetails *models.ProblemDetails
RedirectResponse *models.RedirectResponse
}

func (a *IndividualTSCApplicationSessionContextDocumentApiService) DeleteTSCAppSession(ctx context.Context, request *DeleteTSCAppSessionRequest) (*DeleteTSCAppSessionResponse, error) {
	var (
		localVarHTTPMethod   = strings.ToUpper("Post")
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  DeleteTSCAppSessionResponse
	)

	// create path and map variables
	localVarPath := a.client.cfg.BasePath() + "/tsc-app-sessions/{appSessionId}/delete"
	localVarPath = strings.Replace(localVarPath, "{"+"appSessionId"+"}", openapi.StringOfValue(*request.AppSessionId), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	
    localVarHTTPContentTypes := []string{ "application/json" }
    
    localVarHeaderParams["Content-Type"] = localVarHTTPContentTypes[0] // use the first content type specified in 'consumes'

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{ "application/json", "application/problem+json" }

	// set Accept header
	localVarHTTPHeaderAccept := strings.Join(localVarHTTPHeaderAccepts, ", ")
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}



	// body params

	if request.EventsSubscReqData != nil {
        localVarPostBody = request.EventsSubscReqData
	}

	r, err := openapi.PrepareRequest(ctx, a.client.cfg, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return nil, err
	}

	localVarHTTPResponse, err := openapi.CallAPI(a.client.cfg, r)
	if err != nil || localVarHTTPResponse == nil {
		return nil, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
    if err != nil {
		return nil, err
	}
	err = localVarHTTPResponse.Body.Close()
	if err != nil {
		return nil, err
	}

    apiError := openapi.GenericOpenAPIError{
        RawBody:     localVarBody,
        ErrorStatus: localVarHTTPResponse.StatusCode,
    }

    switch localVarHTTPResponse.StatusCode {
        case 200:
            err = openapi.Deserialize(&localVarReturnValue.EventsNotification, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            return &localVarReturnValue, nil
        case 204:
            return &localVarReturnValue, nil
        case 307:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            v.Location = localVarHTTPResponse.Header.Get("Location")
            v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 308:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            v.Location = localVarHTTPResponse.Header.Get("Location")
            v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 400:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 401:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 403:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 404:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 411:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 413:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 415:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 429:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 500:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 502:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 503:
            var v DeleteTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        default:
            return nil, apiError
    }
}



/*
IndividualTSCApplicationSessionContextDocumentApiService Reads an existing Individual TSC Application Session Context
 * @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @param AppSessionId - String identifying the resource.

@return GetTSCAppSessionResponse
*/

// GetTSCAppSessionRequest
type GetTSCAppSessionRequest struct {
    AppSessionId *string
}

func (r *GetTSCAppSessionRequest) SetAppSessionId(AppSessionId string) {
    r.AppSessionId = &AppSessionId
}

type GetTSCAppSessionResponse struct {
        TscAppSessionContextData *models.TscAppSessionContextData
}

type GetTSCAppSessionError struct {
    Location string
Var3gppSbiTargetNfId string
    ProblemDetails *models.ProblemDetails
RedirectResponse *models.RedirectResponse
}

func (a *IndividualTSCApplicationSessionContextDocumentApiService) GetTSCAppSession(ctx context.Context, request *GetTSCAppSessionRequest) (*GetTSCAppSessionResponse, error) {
	var (
		localVarHTTPMethod   = strings.ToUpper("Get")
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  GetTSCAppSessionResponse
	)

	// create path and map variables
	localVarPath := a.client.cfg.BasePath() + "/tsc-app-sessions/{appSessionId}"
	localVarPath = strings.Replace(localVarPath, "{"+"appSessionId"+"}", openapi.StringOfValue(*request.AppSessionId), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	

    localVarHTTPContentTypes := []string{"application/json"}

    localVarHeaderParams["Content-Type"] = localVarHTTPContentTypes[0] // use the first content type specified in 'consumes'

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{ "application/json", "application/problem+json" }

	// set Accept header
	localVarHTTPHeaderAccept := strings.Join(localVarHTTPHeaderAccepts, ", ")
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}




	r, err := openapi.PrepareRequest(ctx, a.client.cfg, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return nil, err
	}

	localVarHTTPResponse, err := openapi.CallAPI(a.client.cfg, r)
	if err != nil || localVarHTTPResponse == nil {
		return nil, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
    if err != nil {
		return nil, err
	}
	err = localVarHTTPResponse.Body.Close()
	if err != nil {
		return nil, err
	}

    apiError := openapi.GenericOpenAPIError{
        RawBody:     localVarBody,
        ErrorStatus: localVarHTTPResponse.StatusCode,
    }

    switch localVarHTTPResponse.StatusCode {
        case 200:
            err = openapi.Deserialize(&localVarReturnValue.TscAppSessionContextData, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            return &localVarReturnValue, nil
        case 307:
            var v GetTSCAppSessionError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            v.Location = localVarHTTPResponse.Header.Get("Location")
            v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 308:
            var v GetTSCAppSessionError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            v.Location = localVarHTTPResponse.Header.Get("Location")
            v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 400:
            var v GetTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 401:
            var v GetTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 403:
            var v GetTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 404:
            var v GetTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 406:
            var v GetTSCAppSessionError
            apiError.ErrorModel = v
            return nil, apiError
        case 429:
            var v GetTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 500:
            var v GetTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 502:
            var v GetTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 503:
            var v GetTSCAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        default:
            return nil, apiError
    }
}



/*
IndividualTSCApplicationSessionContextDocumentApiService Modifies an existing Individual TSC Application Session Context
 * @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 * @param AppSessionId - String identifying the resource.
 * @param TscAppSessionContextUpdateData - Modification of the resource.

@return ModAppSessionResponse
*/

// ModAppSessionRequest
type ModAppSessionRequest struct {
    AppSessionId *string
    TscAppSessionContextUpdateData *models.TscAppSessionContextUpdateData
}

func (r *ModAppSessionRequest) SetAppSessionId(AppSessionId string) {
    r.AppSessionId = &AppSessionId
}
func (r *ModAppSessionRequest) SetTscAppSessionContextUpdateData(TscAppSessionContextUpdateData models.TscAppSessionContextUpdateData) {
    r.TscAppSessionContextUpdateData = &TscAppSessionContextUpdateData
}

type ModAppSessionResponse struct {
        TscAppSessionContextData *models.TscAppSessionContextData
}

type ModAppSessionError struct {
    Location string
RetryAfter string
Var3gppSbiTargetNfId string
    ProblemDetails *models.ProblemDetails
ProblemDetailsTsctsfQosTscac *models.ProblemDetailsTsctsfQosTscac
RedirectResponse *models.RedirectResponse
}

func (a *IndividualTSCApplicationSessionContextDocumentApiService) ModAppSession(ctx context.Context, request *ModAppSessionRequest) (*ModAppSessionResponse, error) {
	var (
		localVarHTTPMethod   = strings.ToUpper("Patch")
		localVarPostBody     interface{}
		localVarFormFileName string
		localVarFileName     string
		localVarFileBytes    []byte
		localVarReturnValue  ModAppSessionResponse
	)

	// create path and map variables
	localVarPath := a.client.cfg.BasePath() + "/tsc-app-sessions/{appSessionId}"
	localVarPath = strings.Replace(localVarPath, "{"+"appSessionId"+"}", openapi.StringOfValue(*request.AppSessionId), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	
    localVarHTTPContentTypes := []string{ "application/merge-patch+json" }
    
    localVarHeaderParams["Content-Type"] = localVarHTTPContentTypes[0] // use the first content type specified in 'consumes'

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{ "application/json", "application/problem+json" }

	// set Accept header
	localVarHTTPHeaderAccept := strings.Join(localVarHTTPHeaderAccepts, ", ")
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}



	// body params
	localVarPostBody = request.TscAppSessionContextUpdateData


	r, err := openapi.PrepareRequest(ctx, a.client.cfg, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
	if err != nil {
		return nil, err
	}

	localVarHTTPResponse, err := openapi.CallAPI(a.client.cfg, r)
	if err != nil || localVarHTTPResponse == nil {
		return nil, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
    if err != nil {
		return nil, err
	}
	err = localVarHTTPResponse.Body.Close()
	if err != nil {
		return nil, err
	}

    apiError := openapi.GenericOpenAPIError{
        RawBody:     localVarBody,
        ErrorStatus: localVarHTTPResponse.StatusCode,
    }

    switch localVarHTTPResponse.StatusCode {
        case 200:
            err = openapi.Deserialize(&localVarReturnValue.TscAppSessionContextData, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            return &localVarReturnValue, nil
        case 204:
            return &localVarReturnValue, nil
        case 307:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            v.Location = localVarHTTPResponse.Header.Get("Location")
            v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 308:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            v.Location = localVarHTTPResponse.Header.Get("Location")
            v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 400:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 401:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 403:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.ProblemDetailsTsctsfQosTscac, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            v.RetryAfter = localVarHTTPResponse.Header.Get("Retry-After")
            apiError.ErrorModel = v
            return nil, apiError
        case 404:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 411:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 413:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 415:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 429:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 500:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 502:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 503:
            var v ModAppSessionError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        default:
            return nil, apiError
    }
}


// ModAppSessionEventNotificationPostRequest
type ModAppSessionEventNotificationPostRequest struct {
    EventsNotification *models.EventsNotification
}

func (r *ModAppSessionEventNotificationPostRequest) SetEventsNotification(EventsNotification models.EventsNotification) {
r.EventsNotification = &EventsNotification
}

type ModAppSessionEventNotificationPostResponse struct {
        }

type ModAppSessionEventNotificationPostError struct {
    Location string
Var3gppSbiTargetNfId string
    ProblemDetails *models.ProblemDetails
RedirectResponse *models.RedirectResponse
}

func (a *IndividualTSCApplicationSessionContextDocumentApiService) ModAppSessionEventNotificationPost(ctx context.Context, uri string, request *ModAppSessionEventNotificationPostRequest) (*ModAppSessionEventNotificationPostResponse, error) {
    var (
    localVarHTTPMethod   = strings.ToUpper("Post")
    localVarPostBody     interface{}
    localVarFormFileName string
    localVarFileName     string
    localVarFileBytes    []byte
    localVarReturnValue  ModAppSessionEventNotificationPostResponse
    )

    // create path and map variables
    localVarPath := uri

    localVarHeaderParams := make(map[string]string)
    localVarQueryParams := url.Values{}
    localVarFormParams := url.Values{}
    
    localVarHTTPContentTypes := []string{ "application/json" }

    localVarHeaderParams["Content-Type"] = localVarHTTPContentTypes[0] // use the first content type specified in 'consumes'

    // to determine the Accept header
    localVarHTTPHeaderAccepts := []string{ "application/json", "application/problem+json" }

    // set Accept header
    localVarHTTPHeaderAccept := strings.Join(localVarHTTPHeaderAccepts, ", ")
    if localVarHTTPHeaderAccept != "" {
    localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
}



    // body params
        localVarPostBody = request.EventsNotification
    

    r, err := openapi.PrepareRequest(ctx, a.client.cfg, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, localVarFormFileName, localVarFileName, localVarFileBytes)
    if err != nil {
        return nil, err
    }

    localVarHTTPResponse, err := openapi.CallAPI(a.client.cfg, r)
    if err != nil || localVarHTTPResponse == nil {
        return nil, err
    }

    localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
    if err != nil {
		return nil, err
	}
    err = localVarHTTPResponse.Body.Close()
    if err != nil {
        return nil, err
    }

    apiError := openapi.GenericOpenAPIError{
        RawBody:     localVarBody,
        ErrorStatus: localVarHTTPResponse.StatusCode,
    }

    switch localVarHTTPResponse.StatusCode {
        case 204:
            return &localVarReturnValue, nil
        case 307:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
                v.Location = localVarHTTPResponse.Header.Get("Location")
                v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 308:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.RedirectResponse, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
                v.Location = localVarHTTPResponse.Header.Get("Location")
                v.Var3gppSbiTargetNfId = localVarHTTPResponse.Header.Get("3gpp-Sbi-Target-Nf-Id")
            apiError.ErrorModel = v
            return nil, apiError
        case 400:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 401:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 403:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 404:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 411:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 413:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 415:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 429:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 500:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 502:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        case 503:
            var v ModAppSessionEventNotificationPostError
            err = openapi.Deserialize(&v.ProblemDetails, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
            if err != nil {
                return nil, err
            }
            apiError.ErrorModel = v
            return nil, apiError
        default:
            var v ModAppSessionEventNotificationPostError
            apiError.ErrorModel = v
            return nil, apiError
    }
}

