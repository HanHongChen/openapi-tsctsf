/*
 * Ntsctsf_QoSandTSCAssistance Service API
 *
 * TSCTSF QoS and TSC Assistance Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * Source file: 3GPP TS 29.565 V18.3.0; 5G System; Time Sensitive Communication and Time Synchronization function  Services; Stage 3. 
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.565/
 *
 * API version: 1.1.0-alpha.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	
	"encoding/json"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/bson/bsontype"
	
    "bitbucket.org/free5GC/openapi/custom"
)



// Represents the same as the TscQosRequirement data type but with the nullable:true property. 
type TscQosRequirementRm struct {
	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	ReqGbrDl *custom.Nullable[string] `json:"reqGbrDl,omitempty" yaml:"reqGbrDl" bson:"reqGbrDl,omitempty"`
	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	ReqGbrUl *custom.Nullable[string] `json:"reqGbrUl,omitempty" yaml:"reqGbrUl" bson:"reqGbrUl,omitempty"`
	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	ReqMbrDl *custom.Nullable[string] `json:"reqMbrDl,omitempty" yaml:"reqMbrDl" bson:"reqMbrDl,omitempty"`
	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	ReqMbrUl *custom.Nullable[string] `json:"reqMbrUl,omitempty" yaml:"reqMbrUl" bson:"reqMbrUl,omitempty"`
	// This data type is defined in the same way as the 'ExtMaxDataBurstVol' data type, but with the OpenAPI 'nullable: true' property. 
	MaxTscBurstSize *custom.Nullable[int32] `json:"maxTscBurstSize,omitempty" yaml:"maxTscBurstSize" bson:"maxTscBurstSize,omitempty"`
	// This data type is defined in the same way as the 'PacketDelBudget' data type, but with the OpenAPI 'nullable: true' property. 
	Req5Gsdelay *custom.Nullable[int32] `json:"req5Gsdelay,omitempty" yaml:"req5Gsdelay" bson:"req5Gsdelay,omitempty"`
	// This data type is defined in the same way as the 'PacketErrRate' data type, but with the OpenAPI 'nullable: true' property. 
	ReqPer *custom.Nullable[string] `json:"reqPer,omitempty" yaml:"reqPer" bson:"reqPer,omitempty"`
	// This data type is defined in the same way as the TscPriorityLevel data type, but with the OpenAPI nullable property set to true. 
	Priority *custom.Nullable[int32] `json:"priority,omitempty" yaml:"priority" bson:"priority,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with the OpenAPI 'nullable: true' property. 
	TscaiTimeDom *custom.Nullable[int32] `json:"tscaiTimeDom,omitempty" yaml:"tscaiTimeDom" bson:"tscaiTimeDom,omitempty"`
	TscaiInputDl *custom.Nullable[TscaiInputContainer] `json:"tscaiInputDl,omitempty" yaml:"tscaiInputDl" bson:"tscaiInputDl,omitempty"`
	TscaiInputUl *custom.Nullable[TscaiInputContainer] `json:"tscaiInputUl,omitempty" yaml:"tscaiInputUl" bson:"tscaiInputUl,omitempty"`
	// Indicates the capability for AF to adjust the burst sending time, when it is supported and set to \"true\". The default value is \"false\" if omitted. 
	CapBatAdaptation *custom.Nullable[bool] `json:"capBatAdaptation,omitempty" yaml:"capBatAdaptation" bson:"capBatAdaptation,omitempty"`
}
var _ json.Unmarshaler = (*TscQosRequirementRm)(nil)

func (m *TscQosRequirementRm) UnmarshalJSON(data []byte) error {
	var err error
	var b _TscQosRequirementRmJSONUnmarshalBuffer
	if err = json.Unmarshal(data, &b); err != nil {
		return err
	}
	if len(b.ReqGbrDl) != 0 {
		m.ReqGbrDl = custom.NewNullableNull[string]()
		err = m.ReqGbrDl.UnmarshalJSON(b.ReqGbrDl)
		if err != nil {
			return err
		}
	}
	if len(b.ReqGbrUl) != 0 {
		m.ReqGbrUl = custom.NewNullableNull[string]()
		err = m.ReqGbrUl.UnmarshalJSON(b.ReqGbrUl)
		if err != nil {
			return err
		}
	}
	if len(b.ReqMbrDl) != 0 {
		m.ReqMbrDl = custom.NewNullableNull[string]()
		err = m.ReqMbrDl.UnmarshalJSON(b.ReqMbrDl)
		if err != nil {
			return err
		}
	}
	if len(b.ReqMbrUl) != 0 {
		m.ReqMbrUl = custom.NewNullableNull[string]()
		err = m.ReqMbrUl.UnmarshalJSON(b.ReqMbrUl)
		if err != nil {
			return err
		}
	}
	if len(b.MaxTscBurstSize) != 0 {
		m.MaxTscBurstSize = custom.NewNullableNull[int32]()
		err = m.MaxTscBurstSize.UnmarshalJSON(b.MaxTscBurstSize)
		if err != nil {
			return err
		}
	}
	if len(b.Req5Gsdelay) != 0 {
		m.Req5Gsdelay = custom.NewNullableNull[int32]()
		err = m.Req5Gsdelay.UnmarshalJSON(b.Req5Gsdelay)
		if err != nil {
			return err
		}
	}
	if len(b.ReqPer) != 0 {
		m.ReqPer = custom.NewNullableNull[string]()
		err = m.ReqPer.UnmarshalJSON(b.ReqPer)
		if err != nil {
			return err
		}
	}
	if len(b.Priority) != 0 {
		m.Priority = custom.NewNullableNull[int32]()
		err = m.Priority.UnmarshalJSON(b.Priority)
		if err != nil {
			return err
		}
	}
	if len(b.TscaiTimeDom) != 0 {
		m.TscaiTimeDom = custom.NewNullableNull[int32]()
		err = m.TscaiTimeDom.UnmarshalJSON(b.TscaiTimeDom)
		if err != nil {
			return err
		}
	}
	if len(b.TscaiInputDl) != 0 {
		m.TscaiInputDl = custom.NewNullableNull[TscaiInputContainer]()
		err = m.TscaiInputDl.UnmarshalJSON(b.TscaiInputDl)
		if err != nil {
			return err
		}
	}
	if len(b.TscaiInputUl) != 0 {
		m.TscaiInputUl = custom.NewNullableNull[TscaiInputContainer]()
		err = m.TscaiInputUl.UnmarshalJSON(b.TscaiInputUl)
		if err != nil {
			return err
		}
	}
	if len(b.CapBatAdaptation) != 0 {
		m.CapBatAdaptation = custom.NewNullableNull[bool]()
		err = m.CapBatAdaptation.UnmarshalJSON(b.CapBatAdaptation)
		if err != nil {
			return err
		}
	}

	return nil
}

// _TscQosRequirementRmJSONUnmarshaler is used to unmarshal the null properties into the TscQosRequirementRm struct
type _TscQosRequirementRmJSONUnmarshalBuffer struct {
	ReqGbrDl json.RawMessage `json:"reqGbrDl,omitempty"`
	ReqGbrUl json.RawMessage `json:"reqGbrUl,omitempty"`
	ReqMbrDl json.RawMessage `json:"reqMbrDl,omitempty"`
	ReqMbrUl json.RawMessage `json:"reqMbrUl,omitempty"`
	MaxTscBurstSize json.RawMessage `json:"maxTscBurstSize,omitempty"`
	Req5Gsdelay json.RawMessage `json:"req5Gsdelay,omitempty"`
	ReqPer json.RawMessage `json:"reqPer,omitempty"`
	Priority json.RawMessage `json:"priority,omitempty"`
	TscaiTimeDom json.RawMessage `json:"tscaiTimeDom,omitempty"`
	TscaiInputDl json.RawMessage `json:"tscaiInputDl,omitempty"`
	TscaiInputUl json.RawMessage `json:"tscaiInputUl,omitempty"`
	CapBatAdaptation json.RawMessage `json:"capBatAdaptation,omitempty"`
}

var _ bson.Unmarshaler = (*TscQosRequirementRm)(nil)

func (m *TscQosRequirementRm) UnmarshalBSON(data []byte) error {
	var err error
	var b _TscQosRequirementRmBSONUnmarshalBuffer
	if err = bson.Unmarshal(data, &b); err != nil {
		return err
	}
	if b.ReqGbrDl != nil {
		var bt bsontype.Type
		switch len(b.ReqGbrDl) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeString
		}
		m.ReqGbrDl = custom.NewNullableNull[string]()
		err = m.ReqGbrDl.UnmarshalBSONValue(bt, b.ReqGbrDl)
		if err != nil {
			return err
		}
	}
	if b.ReqGbrUl != nil {
		var bt bsontype.Type
		switch len(b.ReqGbrUl) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeString
		}
		m.ReqGbrUl = custom.NewNullableNull[string]()
		err = m.ReqGbrUl.UnmarshalBSONValue(bt, b.ReqGbrUl)
		if err != nil {
			return err
		}
	}
	if b.ReqMbrDl != nil {
		var bt bsontype.Type
		switch len(b.ReqMbrDl) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeString
		}
		m.ReqMbrDl = custom.NewNullableNull[string]()
		err = m.ReqMbrDl.UnmarshalBSONValue(bt, b.ReqMbrDl)
		if err != nil {
			return err
		}
	}
	if b.ReqMbrUl != nil {
		var bt bsontype.Type
		switch len(b.ReqMbrUl) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeString
		}
		m.ReqMbrUl = custom.NewNullableNull[string]()
		err = m.ReqMbrUl.UnmarshalBSONValue(bt, b.ReqMbrUl)
		if err != nil {
			return err
		}
	}
	if b.MaxTscBurstSize != nil {
		var bt bsontype.Type
		switch len(b.MaxTscBurstSize) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeInt32
		}
		m.MaxTscBurstSize = custom.NewNullableNull[int32]()
		err = m.MaxTscBurstSize.UnmarshalBSONValue(bt, b.MaxTscBurstSize)
		if err != nil {
			return err
		}
	}
	if b.Req5Gsdelay != nil {
		var bt bsontype.Type
		switch len(b.Req5Gsdelay) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeInt32
		}
		m.Req5Gsdelay = custom.NewNullableNull[int32]()
		err = m.Req5Gsdelay.UnmarshalBSONValue(bt, b.Req5Gsdelay)
		if err != nil {
			return err
		}
	}
	if b.ReqPer != nil {
		var bt bsontype.Type
		switch len(b.ReqPer) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeString
		}
		m.ReqPer = custom.NewNullableNull[string]()
		err = m.ReqPer.UnmarshalBSONValue(bt, b.ReqPer)
		if err != nil {
			return err
		}
	}
	if b.Priority != nil {
		var bt bsontype.Type
		switch len(b.Priority) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeInt32
		}
		m.Priority = custom.NewNullableNull[int32]()
		err = m.Priority.UnmarshalBSONValue(bt, b.Priority)
		if err != nil {
			return err
		}
	}
	if b.TscaiTimeDom != nil {
		var bt bsontype.Type
		switch len(b.TscaiTimeDom) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeInt32
		}
		m.TscaiTimeDom = custom.NewNullableNull[int32]()
		err = m.TscaiTimeDom.UnmarshalBSONValue(bt, b.TscaiTimeDom)
		if err != nil {
			return err
		}
	}
	if b.TscaiInputDl != nil {
		var bt bsontype.Type
		switch len(b.TscaiInputDl) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeEmbeddedDocument
		}
		m.TscaiInputDl = custom.NewNullableNull[TscaiInputContainer]()
		err = m.TscaiInputDl.UnmarshalBSONValue(bt, b.TscaiInputDl)
		if err != nil {
			return err
		}
	}
	if b.TscaiInputUl != nil {
		var bt bsontype.Type
		switch len(b.TscaiInputUl) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeEmbeddedDocument
		}
		m.TscaiInputUl = custom.NewNullableNull[TscaiInputContainer]()
		err = m.TscaiInputUl.UnmarshalBSONValue(bt, b.TscaiInputUl)
		if err != nil {
			return err
		}
	}
	if b.CapBatAdaptation != nil {
		var bt bsontype.Type
		switch len(b.CapBatAdaptation) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeBoolean
		}
		m.CapBatAdaptation = custom.NewNullableNull[bool]()
		err = m.CapBatAdaptation.UnmarshalBSONValue(bt, b.CapBatAdaptation)
		if err != nil {
			return err
		}
	}

	return nil
}

// _TscQosRequirementRmBSONUnmarshalBuffer is used to unmarshal the null properties into the TscQosRequirementRm struct
type _TscQosRequirementRmBSONUnmarshalBuffer struct {
	ReqGbrDl bson.Raw `bson:"reqGbrDl,omitempty"`
	ReqGbrUl bson.Raw `bson:"reqGbrUl,omitempty"`
	ReqMbrDl bson.Raw `bson:"reqMbrDl,omitempty"`
	ReqMbrUl bson.Raw `bson:"reqMbrUl,omitempty"`
	MaxTscBurstSize bson.Raw `bson:"maxTscBurstSize,omitempty"`
	Req5Gsdelay bson.Raw `bson:"req5Gsdelay,omitempty"`
	ReqPer bson.Raw `bson:"reqPer,omitempty"`
	Priority bson.Raw `bson:"priority,omitempty"`
	TscaiTimeDom bson.Raw `bson:"tscaiTimeDom,omitempty"`
	TscaiInputDl bson.Raw `bson:"tscaiInputDl,omitempty"`
	TscaiInputUl bson.Raw `bson:"tscaiInputUl,omitempty"`
	CapBatAdaptation bson.Raw `bson:"capBatAdaptation,omitempty"`
}

