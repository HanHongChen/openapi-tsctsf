/*
 * Ntsctsf_QoSandTSCAssistance Service API
 *
 * TSCTSF QoS and TSC Assistance Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * Source file: 3GPP TS 29.565 V18.3.0; 5G System; Time Sensitive Communication and Time Synchronization function  Services; Stage 3. 
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.565/
 *
 * API version: 1.1.0-alpha.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	
	"encoding/json"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/bson/bsontype"
	
    "bitbucket.org/free5GC/openapi/custom"
)



// At least one of the \"routeInfo\" attribute and the \"routeProfId\" attribute shall be included in the \"RouteToLocation\" data type. 
type RouteToLocation struct {
	// DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.
	Dnai string `json:"dnai,omitempty" yaml:"dnai" bson:"dnai,omitempty"`
	RouteInfo *custom.Nullable[RouteInformation] `json:"routeInfo,omitempty" yaml:"routeInfo" bson:"routeInfo,omitempty"`
	// Identifies the routing profile Id.
	RouteProfId *custom.Nullable[string] `json:"routeProfId,omitempty" yaml:"routeProfId" bson:"routeProfId,omitempty"`
}
var _ json.Unmarshaler = (*RouteToLocation)(nil)

func (m *RouteToLocation) UnmarshalJSON(data []byte) error {
	var err error
	var b _RouteToLocationJSONUnmarshalBuffer
	if err = json.Unmarshal(data, &b); err != nil {
		return err
	}
	m.Dnai = b.Dnai
	if len(b.RouteInfo) != 0 {
		m.RouteInfo = custom.NewNullableNull[RouteInformation]()
		err = m.RouteInfo.UnmarshalJSON(b.RouteInfo)
		if err != nil {
			return err
		}
	}
	if len(b.RouteProfId) != 0 {
		m.RouteProfId = custom.NewNullableNull[string]()
		err = m.RouteProfId.UnmarshalJSON(b.RouteProfId)
		if err != nil {
			return err
		}
	}

	return nil
}

// _RouteToLocationJSONUnmarshaler is used to unmarshal the null properties into the RouteToLocation struct
type _RouteToLocationJSONUnmarshalBuffer struct {
	Dnai string `json:"dnai,omitempty"`
	RouteInfo json.RawMessage `json:"routeInfo,omitempty"`
	RouteProfId json.RawMessage `json:"routeProfId,omitempty"`
}

var _ bson.Unmarshaler = (*RouteToLocation)(nil)

func (m *RouteToLocation) UnmarshalBSON(data []byte) error {
	var err error
	var b _RouteToLocationBSONUnmarshalBuffer
	if err = bson.Unmarshal(data, &b); err != nil {
		return err
	}
	m.Dnai = b.Dnai
	if b.RouteInfo != nil {
		var bt bsontype.Type
		switch len(b.RouteInfo) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeEmbeddedDocument
		}
		m.RouteInfo = custom.NewNullableNull[RouteInformation]()
		err = m.RouteInfo.UnmarshalBSONValue(bt, b.RouteInfo)
		if err != nil {
			return err
		}
	}
	if b.RouteProfId != nil {
		var bt bsontype.Type
		switch len(b.RouteProfId) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeString
		}
		m.RouteProfId = custom.NewNullableNull[string]()
		err = m.RouteProfId.UnmarshalBSONValue(bt, b.RouteProfId)
		if err != nil {
			return err
		}
	}

	return nil
}

// _RouteToLocationBSONUnmarshalBuffer is used to unmarshal the null properties into the RouteToLocation struct
type _RouteToLocationBSONUnmarshalBuffer struct {
	Dnai string `bson:"dnai,omitempty"`
	RouteInfo bson.Raw `bson:"routeInfo,omitempty"`
	RouteProfId bson.Raw `bson:"routeProfId,omitempty"`
}

