/*
 * Ntsctsf_QoSandTSCAssistance Service API
 *
 * TSCTSF QoS and TSC Assistance Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * Source file: 3GPP TS 29.565 V18.3.0; 5G System; Time Sensitive Communication and Time Synchronization function  Services; Stage 3. 
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.565/
 *
 * API version: 1.1.0-alpha.4
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	
	"encoding/json"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/bson/bsontype"
	
    "bitbucket.org/free5GC/openapi/custom"
)



// Represents QoS requirements for time sensitive communication.
type TscQosRequirement struct {
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	ReqGbrDl string `json:"reqGbrDl,omitempty" yaml:"reqGbrDl" bson:"reqGbrDl,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	ReqGbrUl string `json:"reqGbrUl,omitempty" yaml:"reqGbrUl" bson:"reqGbrUl,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	ReqMbrDl string `json:"reqMbrDl,omitempty" yaml:"reqMbrDl" bson:"reqMbrDl,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	ReqMbrUl string `json:"reqMbrUl,omitempty" yaml:"reqMbrUl" bson:"reqMbrUl,omitempty"`
	// Unsigned integer indicating Maximum Data Burst Volume (see clauses 5.7.3.7 and 5.7.4 of 3GPP TS 23.501), expressed in Bytes.  
	MaxTscBurstSize int32 `json:"maxTscBurstSize,omitempty" yaml:"maxTscBurstSize" bson:"maxTscBurstSize,omitempty"`
	// Unsigned integer indicating Packet Delay Budget (see clauses 5.7.3.4 and 5.7.4 of 3GPP TS 23.501), expressed in milliseconds. 
	Req5Gsdelay int32 `json:"req5Gsdelay,omitempty" yaml:"req5Gsdelay" bson:"req5Gsdelay,omitempty"`
	// String representing Packet Error Rate (see clause 5.7.3.5 and 5.7.4 of 3GPP TS 23.501, expressed as a \"scalar x 10-k\" where the scalar and the exponent k are each encoded as one decimal digit. 
	ReqPer string `json:"reqPer,omitempty" yaml:"reqPer" bson:"reqPer,omitempty"`
	// Represents the priority level of TSC Flows.
	Priority int32 `json:"priority,omitempty" yaml:"priority" bson:"priority,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	TscaiTimeDom int32 `json:"tscaiTimeDom,omitempty" yaml:"tscaiTimeDom" bson:"tscaiTimeDom,omitempty"`
	TscaiInputDl *custom.Nullable[TscaiInputContainer] `json:"tscaiInputDl,omitempty" yaml:"tscaiInputDl" bson:"tscaiInputDl,omitempty"`
	TscaiInputUl *custom.Nullable[TscaiInputContainer] `json:"tscaiInputUl,omitempty" yaml:"tscaiInputUl" bson:"tscaiInputUl,omitempty"`
	// Indicates the capability for AF to adjust the burst sending time, when it is supported and set to \"true\". The default value is \"false\" if omitted. 
	CapBatAdaptation bool `json:"capBatAdaptation,omitempty" yaml:"capBatAdaptation" bson:"capBatAdaptation,omitempty"`
}
var _ json.Unmarshaler = (*TscQosRequirement)(nil)

func (m *TscQosRequirement) UnmarshalJSON(data []byte) error {
	var err error
	var b _TscQosRequirementJSONUnmarshalBuffer
	if err = json.Unmarshal(data, &b); err != nil {
		return err
	}
	m.ReqGbrDl = b.ReqGbrDl
	m.ReqGbrUl = b.ReqGbrUl
	m.ReqMbrDl = b.ReqMbrDl
	m.ReqMbrUl = b.ReqMbrUl
	m.MaxTscBurstSize = b.MaxTscBurstSize
	m.Req5Gsdelay = b.Req5Gsdelay
	m.ReqPer = b.ReqPer
	m.Priority = b.Priority
	m.TscaiTimeDom = b.TscaiTimeDom
	if len(b.TscaiInputDl) != 0 {
		m.TscaiInputDl = custom.NewNullableNull[TscaiInputContainer]()
		err = m.TscaiInputDl.UnmarshalJSON(b.TscaiInputDl)
		if err != nil {
			return err
		}
	}
	if len(b.TscaiInputUl) != 0 {
		m.TscaiInputUl = custom.NewNullableNull[TscaiInputContainer]()
		err = m.TscaiInputUl.UnmarshalJSON(b.TscaiInputUl)
		if err != nil {
			return err
		}
	}
	m.CapBatAdaptation = b.CapBatAdaptation

	return nil
}

// _TscQosRequirementJSONUnmarshaler is used to unmarshal the null properties into the TscQosRequirement struct
type _TscQosRequirementJSONUnmarshalBuffer struct {
	ReqGbrDl string `json:"reqGbrDl,omitempty"`
	ReqGbrUl string `json:"reqGbrUl,omitempty"`
	ReqMbrDl string `json:"reqMbrDl,omitempty"`
	ReqMbrUl string `json:"reqMbrUl,omitempty"`
	MaxTscBurstSize int32 `json:"maxTscBurstSize,omitempty"`
	Req5Gsdelay int32 `json:"req5Gsdelay,omitempty"`
	ReqPer string `json:"reqPer,omitempty"`
	Priority int32 `json:"priority,omitempty"`
	TscaiTimeDom int32 `json:"tscaiTimeDom,omitempty"`
	TscaiInputDl json.RawMessage `json:"tscaiInputDl,omitempty"`
	TscaiInputUl json.RawMessage `json:"tscaiInputUl,omitempty"`
	CapBatAdaptation bool `json:"capBatAdaptation,omitempty"`
}

var _ bson.Unmarshaler = (*TscQosRequirement)(nil)

func (m *TscQosRequirement) UnmarshalBSON(data []byte) error {
	var err error
	var b _TscQosRequirementBSONUnmarshalBuffer
	if err = bson.Unmarshal(data, &b); err != nil {
		return err
	}
	m.ReqGbrDl = b.ReqGbrDl
	m.ReqGbrUl = b.ReqGbrUl
	m.ReqMbrDl = b.ReqMbrDl
	m.ReqMbrUl = b.ReqMbrUl
	m.MaxTscBurstSize = b.MaxTscBurstSize
	m.Req5Gsdelay = b.Req5Gsdelay
	m.ReqPer = b.ReqPer
	m.Priority = b.Priority
	m.TscaiTimeDom = b.TscaiTimeDom
	if b.TscaiInputDl != nil {
		var bt bsontype.Type
		switch len(b.TscaiInputDl) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeEmbeddedDocument
		}
		m.TscaiInputDl = custom.NewNullableNull[TscaiInputContainer]()
		err = m.TscaiInputDl.UnmarshalBSONValue(bt, b.TscaiInputDl)
		if err != nil {
			return err
		}
	}
	if b.TscaiInputUl != nil {
		var bt bsontype.Type
		switch len(b.TscaiInputUl) {
		case 0:
			bt = bson.TypeNull
		default:
			bt = bson.TypeEmbeddedDocument
		}
		m.TscaiInputUl = custom.NewNullableNull[TscaiInputContainer]()
		err = m.TscaiInputUl.UnmarshalBSONValue(bt, b.TscaiInputUl)
		if err != nil {
			return err
		}
	}
	m.CapBatAdaptation = b.CapBatAdaptation

	return nil
}

// _TscQosRequirementBSONUnmarshalBuffer is used to unmarshal the null properties into the TscQosRequirement struct
type _TscQosRequirementBSONUnmarshalBuffer struct {
	ReqGbrDl string `bson:"reqGbrDl,omitempty"`
	ReqGbrUl string `bson:"reqGbrUl,omitempty"`
	ReqMbrDl string `bson:"reqMbrDl,omitempty"`
	ReqMbrUl string `bson:"reqMbrUl,omitempty"`
	MaxTscBurstSize int32 `bson:"maxTscBurstSize,omitempty"`
	Req5Gsdelay int32 `bson:"req5Gsdelay,omitempty"`
	ReqPer string `bson:"reqPer,omitempty"`
	Priority int32 `bson:"priority,omitempty"`
	TscaiTimeDom int32 `bson:"tscaiTimeDom,omitempty"`
	TscaiInputDl bson.Raw `bson:"tscaiInputDl,omitempty"`
	TscaiInputUl bson.Raw `bson:"tscaiInputUl,omitempty"`
	CapBatAdaptation bool `bson:"capBatAdaptation,omitempty"`
}

