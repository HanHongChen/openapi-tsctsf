/*
 * Ntsctsf_TimeSynchronization Service API
 *
 * TSCTSF Time Synchronization Service.   © 2024, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * Source file: 3GPP TS 29.565 V18.5.0; 5G System; Time Sensitive Communication and Time Synchronization Function  Services; Stage 3. 
 * Url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.565/
 *
 * API version: 1.1.0-alpha.6
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	
    "time"
)



// Contains the parameters for the subscription to notification of capability of time  synchronization service. 
type TimeSyncExposureSubsc struct {
	Supis []string `json:"supis,omitempty" yaml:"supis" bson:"supis,omitempty"`
	Gpsis []string `json:"gpsis,omitempty" yaml:"gpsis" bson:"gpsis,omitempty"`
	// String identifying a group of devices network internal globally unique ID which identifies a set of IMSIs, as specified in clause 19.9 of 3GPP TS 23.003.  
	InterGrpId string `json:"interGrpId,omitempty" yaml:"interGrpId" bson:"interGrpId,omitempty"`
	// String identifying External Group Identifier that identifies a group made up of one or more  subscriptions associated to a group of IMSIs, as specified in clause 19.7.3 of 3GPP TS 23.003.  
	ExterGrpId string `json:"exterGrpId,omitempty" yaml:"exterGrpId" bson:"exterGrpId,omitempty"`
	// Identifies whether the request applies to any UE. This attribute shall set to \"true\" if  applicable for any UE, otherwise, set to \"false\". 
	AnyUeInd bool `json:"anyUeInd,omitempty" yaml:"anyUeInd" bson:"anyUeInd,omitempty"`
	NotifMethod NotificationMethod `json:"notifMethod,omitempty" yaml:"notifMethod" bson:"notifMethod,omitempty"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). 
	Dnn string `json:"dnn,omitempty" yaml:"dnn" bson:"dnn,omitempty"`
	Snssai *Snssai `json:"snssai,omitempty" yaml:"snssai" bson:"snssai,omitempty"`
	SubscribedEvents []SubscribedEvent `json:"subscribedEvents,omitempty" yaml:"subscribedEvents" bson:"subscribedEvents,omitempty"`
	EventFilters []EventFilter `json:"eventFilters,omitempty" yaml:"eventFilters" bson:"eventFilters,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	SubsNotifUri string `json:"subsNotifUri,omitempty" yaml:"subsNotifUri" bson:"subsNotifUri,omitempty"`
	// Notification Correlation ID assigned by the NF service consumer.
	SubsNotifId string `json:"subsNotifId,omitempty" yaml:"subsNotifId" bson:"subsNotifId,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	MaxReportNbr int32 `json:"maxReportNbr,omitempty" yaml:"maxReportNbr" bson:"maxReportNbr,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	Expiry *time.Time `json:"expiry,omitempty" yaml:"expiry" bson:"expiry,omitempty"`
	// indicating a time in seconds.
	RepPeriod int32 `json:"repPeriod,omitempty" yaml:"repPeriod" bson:"repPeriod,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SuppFeat string `json:"suppFeat,omitempty" yaml:"suppFeat" bson:"suppFeat,omitempty"`
}

